{{- if .Values.s3.enabled }}
---
apiVersion: "v1"
kind: "Secret"
metadata:
  name: "{{ include "common.names.fullname" . }}-s3"
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
stringData:
  OPENPROJECT_ATTACHMENTS__STORAGE: fog
  OPENPROJECT_FOG_CREDENTIALS_PROVIDER: AWS
  {{/* Fall back to '_' as secret name if the name is not given. This way `lookup` will return null (since secrets with this name will and cannot exist) which it doesn't with an empty string. */}}
  {{ $secret := (lookup "v1" "Secret" .Release.Namespace (default "_" .Values.s3.auth.existingSecret)) | default (dict "data" dict) -}}
  OPENPROJECT_FOG_CREDENTIALS_AWS__ACCESS__KEY__ID: {{
    default .Values.s3.auth.accessKeyId (get $secret.data .Values.s3.auth.secretKeys.accessKeyId | b64dec | quote)
  }}
  OPENPROJECT_FOG_CREDENTIALS_AWS__SECRET__ACCESS__KEY: {{
    default .Values.s3.auth.secretAccessKey (get $secret.data .Values.s3.auth.secretKeys.secretAccessKey | b64dec | quote)
  }}
  {{ if .Values.s3.endpoint -}}
  OPENPROJECT_FOG_CREDENTIALS_ENDPOINT: {{ .Values.s3.endpoint }}
  {{- end }}
  OPENPROJECT_FOG_DIRECTORY: {{ .Values.s3.bucketName }}
  OPENPROJECT_FOG_CREDENTIALS_REGION: {{ .Values.s3.region }}
  OPENPROJECT_FOG_CREDENTIALS_PATH__STYLE: "{{ .Values.s3.pathStyle }}"
  OPENPROJECT_FOG_CREDENTIALS_AWS__SIGNATURE__VERSION: "{{ .Values.s3.signatureVersion }}"
  OPENPROJECT_FOG_CREDENTIALS_USE__IAM__PROFILE: "{{ .Values.s3.use_iam_profile }}"
  OPENPROJECT_DIRECT__UPLOADS: "{{ .Values.s3.directUploads }}"
...
{{- end }}
