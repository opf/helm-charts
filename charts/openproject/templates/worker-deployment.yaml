---
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}-worker
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: {{ .Values.strategy.type }}
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- range $key, $val := .Values.podAnnotations }}
        {{ $key }}: {{ $val | quote }}
        {{- end }}
        # annotate pods with env value checksum so changes trigger re-deployments
        {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace (include "common.names.fullname" .)) | default dict }}
        {{- $secretData := (get $secretObj "data") | default dict }}
        checksum/config: {{ values $secretData | sortAlpha | cat | sha256sum }}
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
    spec:
      {{- if or .Values.imagePullSecrets .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- range (coalesce .Values.imagePullSecrets .Values.global.imagePullSecrets) }}
        - name: "{{ . }}"
        {{- end }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{ toYaml . | nindent 8 | trim }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 | trim }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 | trim }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{ toYaml . | nindent 8 | trim }}
      {{- end }}
      serviceAccountName: {{ include "common.names.fullname" . }}
      {{- if .Values.persistence.enabled }}
      volumes:
        - name: "data"
          persistentVolumeClaim:
            claimName: {{ include "common.names.fullname" . }}
      {{- end }}
      initContainers:
        - name: wait-for-db
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}{{ if .Values.image.sha256 }}@sha256:{{ .Values.image.sha256 }}{{ else }}:{{ .Values.image.tag }}{{ end }}"
          imagePullPolicy: {{ .Values.image.imagePullPolicy }}
          envFrom:
            - secretRef:
                name: {{ include "common.names.fullname" . }}
          command:
            - bash
            - -c
            - 'bundle exec rails runner "require %(timeout); Timeout::timeout(120) do; while true do; puts %(waiting for db); sleep 2; begin; ActiveRecord::Migration.check_pending!; puts %(db ready); exit 0; rescue; end; end; end"'
      containers:
        - name: "openproject"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}{{ if .Values.image.sha256 }}@sha256:{{ .Values.image.sha256 }}{{ else }}:{{ .Values.image.tag }}{{ end }}"
          imagePullPolicy: {{ .Values.image.imagePullPolicy }}
          envFrom:
            - secretRef:
                name: {{ include "common.names.fullname" . }}
          command:
            - bash
            - /app/docker/prod/worker
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: "data"
              mountPath: "/var/openproject/assets"
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
