---
apiVersion: "v1"
kind: "Secret"
metadata:
  name: "{{ include "common.names.fullname" . }}"
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
stringData:
  {{- if .Values.postgresql.bundled }}
  DATABASE_HOST: {{ printf "%s-postgresql.%s.svc.%s" .Release.Name .Release.Namespace .Values.clusterDomain | quote }}
  DATABASE_PORT: "{{ .Values.postgresql.primary.service.ports.postgresql }}"
  DATABASE_URL: "postgresql://{{ .Values.postgresql.auth.username }}:{{ .Values.postgresql.auth.password }}@{{ include "common.names.dependency.fullname" (dict "chartName" "postgresql" "chartValues" .Values.postgresql "context" $) }}:{{ .Values.postgresql.primary.service.ports.postgresql }}/{{ .Values.postgresql.auth.database }}"
  {{- else }}
  DATABASE_HOST: "{{ .Values.postgresql.connection.host }}"
  DATABASE_PORT: "{{ .Values.postgresql.connection.port }}"
  DATABASE_URL: "postgresql://{{ .Values.postgresql.auth.username }}:{{ .Values.postgresql.auth.password }}@{{ .Values.postgresql.connection.host }}:{{ .Values.postgresql.connection.port }}/{{ .Values.postgresql.auth.database }}"
  {{- end }}
  OPENPROJECT_SEED_ADMIN_USER_PASSWORD: {{ .Values.openproject.admin_user.password | quote }}
  OPENPROJECT_SEED_ADMIN_USER_PASSWORD_RESET: {{ .Values.openproject.admin_user.password_reset | quote }}
  OPENPROJECT_SEED_ADMIN_USER_NAME: {{ .Values.openproject.admin_user.name | quote }}
  OPENPROJECT_SEED_ADMIN_USER_MAIL: {{ .Values.openproject.admin_user.mail | quote }}
  OPENPROJECT_HTTPS: {{ (.Values.develop | ternary "false" .Values.openproject.https) | quote }}
  OPENPROJECT_SEED_LOCALE: {{ .Values.openproject.seed_locale | quote }}
  OPENPROJECT_HOST__NAME: {{ .Values.openproject.host | default .Values.ingress.host | quote }}
  OPENPROJECT_HSTS: {{ .Values.openproject.hsts | quote }}
  OPENPROJECT_RAILS__CACHE__STORE: {{ .Values.openproject.cache.store | quote }}
  {{- if eq .Values.openproject.cache.store "memcache" }}
  {{- if .Values.memcached.bundled }}
  OPENPROJECT_CACHE__MEMCACHE__SERVER: "{{ .Release.Name }}-memcached:11211"
  {{- else }}
  OPENPROJECT_CACHE__MEMCACHE__SERVER: "{{ .Values.memcached.connection.host }}:{{.Values.memcached.connection.port }}"
  {{- end }}
  {{- end }}
  OPENPROJECT_RAILS__RELATIVE__URL__ROOT: {{ .Values.openproject.railsRelativeUrlRoot | default "" | quote }}
  POSTGRES_STATEMENT_TIMEOUT: {{ .Values.openproject.postgresStatementTimeout | quote }}
  # OpenID Connect settings
  {{- if .Values.openproject.oidc.enabled }}
  {{ $oidc_prefix := printf "OPENPROJECT_OPENID__CONNECT_%s" (upper .Values.openproject.oidc.provider) }}
  {{ $oidc_prefix }}_DISPLAY__NAME: {{ .Values.openproject.oidc.provider | quote }}
  {{ $oidc_prefix }}_HOST: {{ .Values.openproject.oidc.host | quote }}
  {{ $oidc_prefix }}_IDENTIFIER: {{ .Values.openproject.oidc.identifier | quote }}
  {{ $oidc_prefix }}_SECRET: {{ .Values.openproject.oidc.secret | quote }}
  {{ $oidc_prefix }}_AUTHORIZATION__ENDPOINT: {{ .Values.openproject.oidc.authorizationEndpoint | quote }}
  {{ $oidc_prefix }}_TOKEN__ENDPOINT: {{ .Values.openproject.oidc.tokenEndpoint | quote }}
  {{ $oidc_prefix }}_USERINFO__ENDPOINT: {{ .Values.openproject.oidc.userinfoEndpoint | quote }}
  {{ $oidc_prefix }}_END__SESSION__ENDPOINT: {{ .Values.openproject.oidc.endSessionEndpoint | quote }}
  {{ $oidc_prefix }}_SCOPE: {{ .Values.openproject.oidc.scope | quote }}
  {{- range $key, $value := .Values.openproject.oidc.attribute_map }}
  {{ $mapping_key := printf "%s_ATTRIBUTE_MAP_%s" $oidc_prefix (upper $key) }}
  {{ $mapping_key }}: {{ $value | quote }}
  {{- end }}
  {{- end }}
  {{- if .Values.s3.enabled }}
  OPENPROJECT_ATTACHMENTS__STORAGE: fog
  OPENPROJECT_FOG_CREDENTIALS_PROVIDER: AWS
  OPENPROJECT_FOG_CREDENTIALS_AWS__ACCESS__KEY__ID: {{ .Values.s3.accessKeyId }}
  OPENPROJECT_FOG_CREDENTIALS_AWS__SECRET__ACCESS__KEY: {{ .Values.s3.secretAccessKey }}
  {{- if .Values.s3.endpoint }}
  OPENPROJECT_FOG_CREDENTIALS_ENDPOINT: {{ .Values.s3.endpoint }}
  {{- end }}
  OPENPROJECT_FOG_DIRECTORY: {{ .Values.s3.bucketName }}
  OPENPROJECT_FOG_CREDENTIALS_REGION: {{ .Values.s3.region }}
  OPENPROJECT_FOG_CREDENTIALS_PATH__STYLE: "{{ .Values.s3.pathStyle }}"
  OPENPROJECT_FOG_CREDENTIALS_AWS__SIGNATURE__VERSION: "{{ .Values.s3.signatureVersion }}"
  OPENPROJECT_FOG_CREDENTIALS_USE__IAM__PROFILE: "{{ .Values.s3.use_iam_profile }}"
  OPENPROJECT_DIRECT__UPLOADS: "{{ .Values.s3.directUploads }}"
  {{- end }}
  # Additional environment variables
  {{- range $key, $value := .Values.environment }}
  {{ $key }}: {{ $value | quote }}
  {{- end }}
...
